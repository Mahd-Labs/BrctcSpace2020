I used the VS 2017 tutorial for attaching to remote system: https://devblogs.microsoft.com/premier-developer/debugging-asp-core-on-linux-with-visual-studio-2017/

Installing .net core: https://gist.github.com/richlander/467813274cea8abc624553ee72b28213

Modified script (all you need):

curl -SL -o dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/2ebe1f4b-4423-4694-8f5b-57f22a315d66/4bceeffda88fc6f19fad7dfb2cd30487/dotnet-sdk-3.1.404-linux-arm.tar.gz
sudo mkdir -p /usr/share/dotnet
sudo tar -zxf dotnet.tar.gz -C /usr/share/dotnet
sudo ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet

Then use sudo dotnet <appname.dll>

https://docs.microsoft.com/en-us/visualstudio/debugger/remote-debugging-dotnet-core-linux-with-ssh?view=vs-2019


Misinformation that may be useful for other purposes: 
Setup: https://github.com/Microsoft/MIEngine/wiki/Offroad-Debugging-of-.NET-Core-on-Linux---OSX-from-Visual-Studio

ssh is already installed, so skip that step

I used the default ~/vsdbg location

Putty apps have been saved to the Tools subdirectory of the Blazor Web App. Key will either have to be manually copied from an existing tools directory as the file will not be uploaded to git.
Or, simply follow the instruction. 

First time use of plink.exe:
run c:\mytools\plink.exe -i c:\users\greggm\ssh-key.ppk pi@rpi (or whatever IP Address/hostname).
make sure to accept the connection.
CTRL + C out of the connection
run c:\mytools\plink.exe -i c:\users\greggm\ssh-key.ppk pi@rpi -batch -T echo "Successful Connection!"
verify Successful Connection! is returned


.net 5 arm:
curl -SL -o dotnet.tar.gz https://download.visualstudio.microsoft.com/download/pr/e8912d3b-483b-4d6f-bd3a-3066b3194313/20f2261fe4e16e55df4bbe03c65a7648/dotnet-sdk-5.0.100-linux-arm.tar.gz
sudo mkdir -p /usr/share/dotnet
sudo tar -zxf dotnet.tar.gz -C /usr/share/dotnet
sudo ln -s /usr/share/dotnet/dotnet /usr/bin/dotnet


export DOTNET_ROOT=/usr/share/dotnet
export PATH=$PATH:/usr/share/dotnet